diff -ur cfe-5.0.0.src.orig/lib/Driver/ToolChains/Gnu.cpp cfe-5.0.0.src/lib/Driver/ToolChains/Gnu.cpp
--- cfe-5.0.0.src.orig/lib/Driver/ToolChains/Gnu.cpp	2017-09-13 07:15:52.419093088 -0700
+++ cfe-5.0.0.src/lib/Driver/ToolChains/Gnu.cpp	2017-09-13 07:21:58.892639000 -0700
@@ -493,10 +493,6 @@
       CmdArgs.push_back("-export-dynamic");
 
     if (!Args.hasArg(options::OPT_shared)) {
-      const std::string Loader =
-          D.DyldPrefix + ToolChain.getDynamicLinker(Args);
-      CmdArgs.push_back("-dynamic-linker");
-      CmdArgs.push_back(Args.MakeArgString(Loader));
     }
   }
 
diff -ur cfe-5.0.0.src.orig/lib/Driver/ToolChains/Linux.cpp cfe-5.0.0.src/lib/Driver/ToolChains/Linux.cpp
--- cfe-5.0.0.src.orig/lib/Driver/ToolChains/Linux.cpp	2017-09-13 07:15:52.419093088 -0700
+++ cfe-5.0.0.src/lib/Driver/ToolChains/Linux.cpp	2017-09-13 07:17:58.530311694 -0700
@@ -195,18 +195,7 @@
   llvm::Triple::ArchType Arch = Triple.getArch();
   std::string SysRoot = computeSysRoot();
 
-  // Cross-compiling binutils and GCC installations (vanilla and openSUSE at
-  // least) put various tools in a triple-prefixed directory off of the parent
-  // of the GCC installation. We use the GCC triple here to ensure that we end
-  // up with tools that support the same amount of cross compiling as the
-  // detected GCC installation. For example, if we find a GCC installation
-  // targeting x86_64, but it is a bi-arch GCC installation, it can also be
-  // used to target i386.
-  // FIXME: This seems unlikely to be Linux-specific.
-  ToolChain::path_list &PPaths = getProgramPaths();
-  PPaths.push_back(Twine(GCCInstallation.getParentLibPath() + "/../" +
-                         GCCInstallation.getTriple().str() + "/bin")
-                       .str());
+  // Removed some code here that found programs like ld in "/..//bin"
 
   Distro Distro(D.getVFS());
 
